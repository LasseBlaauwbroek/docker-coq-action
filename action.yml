name: 'Docker-Coq Action'
branding:
  icon: 'check-circle'
  color: 'gray-dark'
description: 'GitHub Action using Docker-Coq'
author: 'Erik Martin-Dorel'
inputs:
  opam_file:
    description: 'The path of the .opam file (or a directory), relative to the repo root.'
    default: '.'
  coq_version:
    description: '"8.X", "latest", or "dev".'
    default: 'latest'
  ocaml_version:
    description: 'minimal, 4.07-flambda, or 4.09-flambda'
    default: 'minimal'
  before_install:
    description: 'Customizable script run before "install", empty by default.'
    default: |
      opam config list; opam repo list; opam list
  install:
    description: 'Customizable script to install the opam dependencies.'
    default: |
      opam pin add -n -y -k path $PACKAGE $WORKDIR
      opam update -y
      opam install -y -j 2 $PACKAGE --deps-only
  after_install:
    description: 'Customizable script run after "install".'
    default: |
      opam list
  before_script:
    description: 'Customizable script run before the opam build, empty by default.'        
  script:
    description: 'Customizable script run to install the opam package(s).'
    default: |
      opam install -y -v -j 2 $PACKAGE
      opam list  
  after_script:
    description: 'Customizable script run after the opam build, empty by default.'
  uninstall:
    description: 'Customizable script run to uninstall the opam package(s).'
    default: |
      opam remove $PACKAGE
  custom_script:
    description: 'The main script run in the container; may be overridden.'
    default: |
      startGroup Build dependencies
        {{before_install}}
        {{install}}
        {{after_install}}
      endGroup
      startGroup Build
        {{before_script}}
        {{script}}
        {{after_script}}
      endGroup
      startGroup Uninstallation test
        {{uninstall}}
      endGroup
  custom_image:
    description: 'The name of the Docker image to pull; unset by default.'
  export:
    description: 'Space-separated list of env variables to export to the custom_script.'
runs:
  using: 'docker'
  image: 'Dockerfile'
